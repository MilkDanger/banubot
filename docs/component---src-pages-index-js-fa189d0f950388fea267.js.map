{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","__webpack_exports__","pages_Card","Sides","rus","eng","this","Card","_this","_Component","call","cardDiv","createRef","prev","nxt","lang","sort","state","cardTxt","posTxt","decks","cards","i","flipped","loaded","sorted","all","add","push","update","setState","length","flip","next","amt","flipdate","deckify","links","pages_Deck","name","key","changeDeck","index","console","log","switchLang","getCardInfo","_this2","allTestJson","edges","forEach","item","node","componentDidMount","current","addEventListener","me","onclick","handleEvent","e","_this3","type","className","styles","ref","pos","cardText","gatsby_browser_entry_StaticQuery","_3541047044","Component","Deck","_this4","_Component2","assertThisInitialized_default","deck","onClick","src","alt","deckName","m","module","exports","require","default","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match","$export","aFunction","toObject","fails","$sort","test","P","F","undefined","comparefn","method","arg","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"+LAaMA,gBAAqBC,IAAMC,cAAc,KAEzCC,EAAc,SAAAC,GAAK,OACvBC,EAAAC,EAAAC,cAACP,EAAmBQ,SAApB,KACG,SAAAC,GACC,OACEL,EAAMM,MACLD,EAAgBL,EAAMO,QAAUF,EAAgBL,EAAMO,OAAOD,MAEtDN,EAAMQ,QAAUR,EAAMS,UAC5BT,EAAMM,KAAON,EAAMM,KAAKA,KAAOD,EAAgBL,EAAMO,OAAOD,MAGvDL,EAAAC,EAAAC,cAAA,uCA4BfJ,EAAYW,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,4BCjDPC,EAAA,0BACdf,EAAAC,EAAAC,cAACc,EAAD,OAcD,SAASC,EAAMC,EAAKC,GAClBC,KAAKD,IAAMA,EACXC,KAAKF,IAAMA,MAIPG,cAEL,SAAAA,EAAYtB,GAAO,IAAAuB,EAAA,OAClBA,EAAAC,EAAAC,KAAAJ,KAAMrB,IAANqB,MAKKK,QAAU7B,IAAM8B,YACrBJ,EAAKK,KAAO/B,IAAM8B,YAClBJ,EAAKM,IAAMhC,IAAM8B,YACjBJ,EAAKO,KAAOjC,IAAM8B,YAClBJ,EAAKQ,KAAOlC,IAAM8B,YAIlBJ,EAAKS,MAAQ,CACZC,QAAS,IACTC,OAAQ,MACRC,MAAO,IAIRZ,EAAKa,MAAQ,GAEbb,EAAKc,EAAI,EAGTd,EAAKJ,KAAM,EAEXI,EAAKe,SAAU,EAEff,EAAKgB,QAAS,EAEdhB,EAAKiB,QAAS,EAEdjB,EAAKkB,IAAM,GAlCOlB,sCAsCnBmB,IAAA,SAAIvB,EAAKC,GACRC,KAAKe,MAAMO,KAAK,IAAIzB,EAAMC,EAAKC,OAKhCwB,OAAA,WACCvB,KAAKwB,SAAS,CACbZ,QAASZ,KAAKF,IAAME,KAAKe,MAAMf,KAAKgB,GAAGlB,IAAME,KAAKe,MAAMf,KAAKgB,GAAGjB,IAChEc,OAASb,KAAKgB,EAAI,EAAK,IAAMhB,KAAKe,MAAMU,YAK1CC,KAAA,WACC1B,KAAKF,KAAOE,KAAKF,IACjBE,KAAKiB,SAAWjB,KAAKiB,QACrBjB,KAAKuB,YAINI,KAAA,SAAKC,GACA5B,KAAKe,MAAMU,OAAS,IACvBzB,KAAKgB,GAAKhB,KAAKgB,EAAIY,GAAO5B,KAAKe,MAAMU,OAEjCzB,KAAKgB,EAAI,IACZhB,KAAKgB,EAAIhB,KAAKe,MAAMU,OAAS,GAI9BzB,KAAK6B,eAOPA,SAAA,WACK7B,KAAKiB,QACRjB,KAAK0B,OAEL1B,KAAKuB,YAMPO,QAAA,WACC,IAAId,EAIJ,IAAKA,EAAI,EAAGA,EAAIhB,KAAKe,MAAMU,OAAQT,IAClChB,KAAKoB,IAAIE,KAAKtB,KAAKe,MAAMC,IAG1B,IAAIe,EAAQ,GAEZ,IAAKf,EAAI,GAAIA,EAAIhB,KAAKoB,IAAIK,OAAQT,GAAG,GACpCe,EAAMT,KAAK1C,EAAAC,EAAAC,cAACkD,EAAD,CAAMC,KAAMjB,EAAGkB,IAAKlB,EAAGD,MAAOf,QAG1CA,KAAKmC,WAAW,IAChBnC,KAAKwB,SAAS,CACbV,MAAOiB,OAMTI,WAAA,SAAWC,GAGV,IAAIpB,EAEJ,IAHAhB,KAAKe,MAAQ,GAEbsB,QAAQC,IAAI,iBAAmBF,GAC1BpB,EAAIoB,EAAQ,GAAIpB,EAAIoB,EAAOpB,IAC/BhB,KAAKe,MAAMO,KAAKtB,KAAKoB,IAAIJ,IAE1BhB,KAAKgB,EAAI,EACThB,KAAK6B,cAINU,WAAA,WACCvC,KAAKF,KAAOE,KAAKF,IACjBE,KAAKuB,YAMNiB,YAAA,SAAYvD,GAAM,IAAAwD,EAAAzC,KACZA,KAAKkB,SACTlB,KAAKqB,IAAI,iCAAiC,sBAC1CpC,EAAKyD,YAAYC,MAAMC,QAAQ,SAAAC,GAC9BJ,EAAKpB,IAAIwB,EAAKC,KAAKhD,IAAI+C,EAAKC,KAAK/C,OAElCC,KAAKkB,QAAS,MAMhB6B,kBAAA,WACC/C,KAAKuB,SACLvB,KAAKK,QAAQ2C,QAAQC,iBAAiB,QAASjD,MAE/C,IAAIkD,EAAKlD,KACTA,KAAKO,KAAKyC,QAAQG,QAAU,WAAYD,EAAGvB,MAAM,IACjD3B,KAAKQ,IAAIwC,QAAQG,QAAU,WAAYD,EAAGvB,KAAK,IAC/C3B,KAAKS,KAAKuC,QAAQG,QAAU,WAAYD,EAAGX,cAC3CvC,KAAKU,KAAKsC,QAAQG,QAAU,WAAYD,EAAGpB,cAI5CsB,YAAA,SAAYC,GACVrD,KAAK0B,UAKPvC,OAAA,WAAS,IAAAmE,EAAAtD,KACR,OACCpB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,UAAQyE,KAAK,SAASC,UAAWC,IAAO/B,KAAMgC,IAAK1D,KAAKS,MAAxD,aACA7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQyE,KAAK,SAASG,IAAK1D,KAAKO,MAAhC,WACA3B,EAAAC,EAAAC,cAAA,KAAG0E,UAAWC,IAAOE,KAAM3D,KAAKW,MAAME,QACtCjC,EAAAC,EAAAC,cAAA,UAAQyE,KAAK,SAASG,IAAK1D,KAAKQ,KAAhC,aACA5B,EAAAC,EAAAC,cAAA,OAAK0E,UAAWC,IAAOG,SAAUF,IAAK1D,KAAKK,SACzCL,KAAKW,MAAMC,SAEbhC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAQyE,KAAK,SAASG,IAAK1D,KAAKU,MAAhC,eACA9B,EAAAC,EAAAC,cAAA,WACCkB,KAAKW,MAAMG,QAGdlC,EAAAC,EAAAC,cAAC+E,EAAD,CACC3E,MAAK,aAaNC,OAAQ,SAAAF,GAAI,OACXL,EAAAC,EAAAC,cAAA,WACEwE,EAAKd,YAAYvD,KAhBpBA,KAAA6E,SAnLeC,aAiNbC,cACL,SAAAA,EAAYrF,GAAO,IAAAsF,GAClBA,EAAAC,EAAA9D,KAAAJ,KAAMrB,IAANqB,MAIKe,MAAQpC,EAAMoC,MACnBkD,EAAKhC,KAAOtD,EAAMsD,KAClB,IAAIiB,EAAKiB,IAAAF,GAPS,OAUlBA,EAAKvE,KAAO,WAAYf,EAAMoC,MAAMoB,WAAWe,EAAGjB,OAVhCgC,8BAcnB9E,OAAA,WACC,OACCP,EAAAC,EAAAC,cAAA,OAAK0E,UAAWC,IAAOW,KAAMC,QAASrE,KAAKN,MAC1Cd,EAAAC,EAAAC,cAAA,OAAKwF,IAAI,YAAYC,IAAI,SACzB3F,EAAAC,EAAAC,cAAA,OAAK0E,UAAWC,IAAOe,UAAWxE,KAAKiC,WAnBxB8B,kCC/OnB,IAAsBU,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,uBCA/C,IAAAK,EAASC,EAAQ,IAAcC,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBF,EAAQ,KAAgBD,EAAAG,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAAtF,MAAAuF,MAAAH,GAAA,GACK,MAAA/B,GACL,+CCXA,IAAAmC,EAAcT,EAAQ,IACtBU,EAAgBV,EAAQ,IACxBW,EAAeX,EAAQ,IACvBY,EAAYZ,EAAQ,IACpBa,EAAA,GAAAlF,KACAmF,EAAA,QAEAL,IAAAM,EAAAN,EAAAO,GAAAJ,EAAA,WAEAE,EAAAnF,UAAAsF,OACCL,EAAA,WAEDE,EAAAnF,KAAA,UAEOqE,EAAQ,IAARA,CAA0Ba,IAAA,SAEjClF,KAAA,SAAAuF,GACA,YAAAD,IAAAC,EACAL,EAAAxF,KAAAsF,EAAA1F,OACA4F,EAAAxF,KAAAsF,EAAA1F,MAAAyF,EAAAQ,yCCnBA,IAAAN,EAAYZ,EAAQ,IAEpBL,EAAAC,QAAA,SAAAuB,EAAAC,GACA,QAAAD,GAAAP,EAAA,WAEAQ,EAAAD,EAAA9F,KAAA,kBAAuD,GAAA8F,EAAA9F,KAAA,k2iYCAjDgG,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIE/H,IAAMM,cAAc6H,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXV,EAAiB/G,UAAY,CAC3BiH,SAAUhH,IAAUyH,MAAM,CACxBL,SAAUpH,IAAUE,OAAOC,aAC1BA,YAGU2G","file":"component---src-pages-index-js-fa189d0f950388fea267.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/* Hannah Parraga\n * Russian flashcards website with cards taken\n * from the 10000 most common words (I deleted ones I know)\n */\nimport React, { Component } from \"react\"\n//import { Link } from \"gatsby\"\nimport { StaticQuery, graphq1 } from \"gatsby\"\nimport styles from \"../components/flashcards-container.module.css\"\n\nexport default () => (\n\t<Card />\n//This is for later for the main page\n/*\t\n\t<div>\n\t\t<h1>Hannah Parraga</h1>\n\t\t<Link to=\"/translate/\">Translations</Link>\n\t\t<a href=\"https://github.com/banubot\">\n\t\t\t<img src=\"github.png\" alt=\"\" />\n\t\t</a>\n\t</div>\n*/\n);\n\n//2 sides for every card\nfunction Sides(rus, eng) {\n\t\tthis.eng = eng;\n\t\tthis.rus = rus;\n}\n\n//The big white square with the words in it\nclass Card extends Component {\n\t//give properties to react component constructor\n\tconstructor(props) {\n\t\tsuper(props);\n\t\n\t\t//references to the div where the\n\t\t//words are and the change card buttons\n\t\t//to change the text\n\t\tthis.cardDiv = React.createRef();\n\t\tthis.prev = React.createRef();\n\t\tthis.nxt = React.createRef();\n\t\tthis.lang = React.createRef();\n\t\tthis.sort = React.createRef();\n\n\t\t//card text and position number text\n\t\t//goes in div\n\t\tthis.state = {\t\n\t\t\tcardTxt: \"p\",\n\t\t\tposTxt: \"0/0\",\n\t\t\tdecks: [],\n\t\t};\n\t\t\n\t\t//array of all possible cards\n\t\tthis.cards = [];\n\t\t//current card index\n\t\tthis.i = 0;\n\t\t//are we on the russian side? \n\t\t//either bc rus side up or bc flipped\n\t\tthis.rus = true;\n\t\t//card was flipped\n\t\tthis.flipped = false;\n\t\t//already grabbed the cards from json?\n\t\tthis.loaded = false;\n\t\t//don't sort more than once\n\t\tthis.sorted = false;\n\t\t//storage for cards if decks\n\t\tthis.all = [];\n\t}\n\n\t//put a new card in the master array\n\tadd(rus, eng) {\n\t\tthis.cards.push(new Sides(rus, eng));\n\t}\n\n\t//pick the rus or eng side of the card at \n\t//current index and update the text\n\tupdate() {\n\t\tthis.setState({\n\t\t\tcardTxt: this.rus ? this.cards[this.i].rus : this.cards[this.i].eng,\n\t\t\tposTxt: (this.i + 1) + \"/\" + this.cards.length\n\t\t});\n\t}\n\n\t//swap sides and update\n\tflip() {\n\t\tthis.rus = !this.rus;\n\t\tthis.flipped = !this.flipped;\n\t\tthis.update();\n\t}\n\n\t//move the card index forward or back \n\tnext(amt) {\n\t\tif (this.cards.length > 0) {\n\t\t\tthis.i = (this.i + amt) % this.cards.length;\n\t\t\t//wrap around\n\t\t\tif (this.i < 0) {\n\t\t\t\tthis.i = this.cards.length - 1;\n\t\t\t}\n\t\t\t//if you flipped over the card last time,\n\t\t\t//this one shouldn't be flipped too\n\t\t\tthis.flipdate();\n\t\t}\n\t}\n\n\n\t//flip sides before updating or no\n\t//for when deck or language changes\n\tflipdate() {\n\t\tif (this.flipped) {\n\t\t\tthis.flip()\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t}\n\n\t//take all the cars and split them into decks \n\t//with 10 cards each\n\tdeckify() {\n\t\tvar i;\n\t\tvar deck;\n\t\t//save all the cards so they can be grabbed when \n\t\t//deck changes\n\t\tfor (i = 0; i < this.cards.length; i++) {\n\t\t\tthis.all.push(this.cards[i]);\n\t\t}\n\t\t//fill array with deck components\n\t\tvar links = [];\n\t\tvar me = this;\n\t\tfor (i = 10; i < this.all.length; i+=10) {\n\t\t\tlinks.push(<Deck name={i} key={i} cards={this}/>);\n\t\t}\n\t\t//go back to first deck\n\t\tthis.changeDeck(10);\n\t\tthis.setState({\n\t\t\tdecks: links\n\t\t});\n\t}\n\n\t//change the card to be 10 cards from index - 10\n\t//to index\n\tchangeDeck(index) {\n\t\t//empty current cards\n\t\tthis.cards = [];\n\t\tvar i;\n\t\tconsole.log(\"current deck: \" + index);\n\t\tfor (i = index - 10; i < index; i++) {\n\t\t\tthis.cards.push(this.all[i]);\n\t\t}\n\t\tthis.i = 0;\n\t\tthis.flipdate();\n\t}\n\t\n\t//change all cards to be other language side up\n\tswitchLang() {\n\t\tthis.rus = !this.rus;\n\t\tthis.update();\n\t}\n\n\n\t//load up all the cards from the json and add them \n\t//to the array\n\tgetCardInfo(data) {\n\t\tif (!this.loaded) {\n\t\t\tthis.add(\"Нажмите карточку чтобы щелкать\",\"Click card to flip\");\n\t\t\tdata.allTestJson.edges.forEach(item => {\n\t\t\t\tthis.add(item.node.rus,item.node.eng);\n\t\t\t});\n\t\t\tthis.loaded = true;\n\t\t}\n\t}\n\n\t//if this react component was made successfully\n\t//then add click handlers to the card div and buttons\n\tcomponentDidMount() {\n\t\tthis.update();\n\t\tthis.cardDiv.current.addEventListener('click', this) \n\t\t//preserve who \"this\" is inside function\n\t\tvar me = this;\n\t\tthis.prev.current.onclick = function() {me.next(-1);};\n\t\tthis.nxt.current.onclick = function() {me.next(1);};\n\t\tthis.lang.current.onclick = function() {me.switchLang();};\n\t\tthis.sort.current.onclick = function() {me.deckify();};\n\t}\n\t\n\t//card div was clicked\n\thandleEvent(e) {\n\t  this.flip()\n\t}\n\n\t//this is what card and buttons should look like\n\t//StaticQuery is the query to get the json info\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<center>\n\t\t\t\t\t<button type=\"button\" className={styles.flip} ref={this.lang}>рус - анг</button>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<button type=\"button\" ref={this.prev}>прошлая</button>\n\t\t\t\t\t<p className={styles.pos}>{this.state.posTxt}</p>\n\t\t\t\t\t<button type=\"button\" ref={this.nxt}>следующая</button>\n\t\t\t\t\t<div className={styles.cardText} ref={this.cardDiv}>\n\t\t\t\t\t\t{this.state.cardTxt}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button type=\"button\" ref={this.sort}>сортировать</button>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t{this.state.decks}\n\t\t\t\t\t</div>\n\t\t\t\t</center>\n\t\t\t\t<StaticQuery\n\t\t\t\t\tquery={\n\t\t\t\t\t\tgraphql`\n\t\t\t\t\t\t  query CardQuery {\n\t\t\t\t\t\t\tallTestJson {\n\t\t\t\t\t\t\t  edges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\trus\n\t\t\t\t\t\t\t\t\teng\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  }\n\t\t\t\t`}\n\t\t\t\trender={data => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.getCardInfo(data)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t  />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//all the buttons that show up when you\n//hit the sort button\n//each deck will have 10 words in it just because \n//I think that's a pretty manageable amount of words\n//to learn at once\nclass Deck extends Component {\n\tconstructor(props) {\n\t\tsuper(props); \n\t\t//each deck component has a reference to\n\t\t//the card component so it can tell the \n\t\t//card comp. to change to its cards\n\t\tthis.cards = props.cards;\n\t\tthis.name = props.name;\n\t\tvar me = this;\n\t\t//when this deck button is clicked,\n\t\t//change cards to cards of this deck\n\t\tthis.func = function() {props.cards.changeDeck(me.name);};\n\t}\n\t\n\t//each has a deck pic and the number\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.deck} onClick={this.func}>\n\t\t\t\t<img src=\"cards.png\" alt=\"deck\"/>\n\t\t\t\t<div className={styles.deckName}>{this.name}</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}