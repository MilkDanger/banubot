{"version":3,"sources":["webpack:///./src/pages/translations/index.js"],"names":["className","styles","poembod","id","poemsTitle","query","render","data","col1","col2","i","allPoemsJson","edges","forEach","item","imgSrc","node","author","img","src","alt","authors","p","text","onMouseOver","event","target","innerHTML","eng","onMouseLeave","rus","push","map","r","row","column","getPoemInfo"],"mappings":"ulWAKe,4BACd,gCACC,kBAAC,IAAD,KACI,0BAAMA,UAAWC,IAAOC,WAE5B,wBAAIC,GAAIF,IAAOG,YAAf,yBACA,kBAAC,IAAD,CACGC,MAAK,aAcNC,OAAQ,SAAAC,GAAI,OACX,6BAQL,SAAqBA,GACpB,IAAIC,EAAO,GACPC,EAAO,GACPC,EAAI,EAoBR,OAnBAH,EAAKI,aAAaC,MAAMC,SAAQ,SAAAC,GAC/B,IAAIC,EAAS,eAAiBD,EAAKE,KAAKC,OAAS,OAC7CC,EAAM,yBAAKC,IAAKJ,EAAQK,IAAI,MAAMpB,UAAWC,IAAOoB,UACpDC,EAAI,uBAAGtB,UAAWC,IAAOsB,KAC3BC,YAAa,SAACC,GAAD,OAAWA,EAAMC,OAAOC,UAAYb,EAAKE,KAAKY,KAC5DC,aAAc,SAACJ,GAAD,OAAWA,EAAMC,OAAOC,UAAYb,EAAKE,KAAKc,MAC1DhB,EAAKE,KAAKc,KAETpB,EAAI,GAAM,GACbF,EAAKuB,KAAKT,GACPb,EAAKsB,KAAKb,KAEbV,EAAKuB,KAAKb,GACVT,EAAKsB,KAAKT,IAEXZ,OAEDF,EAAOA,EAAKwB,KAAI,SAACC,GAAD,OAAO,6BAAMA,MAC7BxB,EAAOA,EAAKuB,KAAI,SAACtB,GAAD,OAAO,6BAAMA,MACtB,yBAAKV,UAAWC,IAAOiC,KAC3B,yBAAKlC,UAAWC,IAAOkC,QACrB3B,GAEF,yBAAKR,UAAWC,IAAOkC,QACrB1B,IAnCC2B,CAAY7B,KAjBjB","file":"component---src-pages-translations-index-js-795c2153e29558b9834c.js","sourcesContent":["import React from \"react\"\nimport styles from \"../../components/translations.module.css\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Helmet from 'react-helmet'\n\nexport default () => (\n\t<center>\n\t\t<Helmet>\n    \t\t<body className={styles.poembod} />\n\t\t</Helmet>\n\t\t<h1 id={styles.poemsTitle}>Poetry in Translation</h1>\n\t\t<StaticQuery\n\t\t\t\t\tquery={\n\t\t\t\t\t\tgraphql`\n\t\t\t\t\t\t  query PoemQuery {\n\t\t\t\t\t\t\tallPoemsJson {\n\t\t\t\t\t\t\t  edges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tauthor\n\t\t\t\t\t\t\t\t\trus\n\t\t\t\t\t\t\t\t\teng\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  }\n\t\t\t\t`}\n\t\t\t\trender={data => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{getPoemInfo(data)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t  />\n\t</center>\n)\n\nfunction getPoemInfo(data) {\n\tlet col1 = [];\n\tlet col2 = [];\n\tlet i = 0;\n\tdata.allPoemsJson.edges.forEach(item => {\n\t\tlet imgSrc = \"../poetPics/\" + item.node.author + \".jpg\";\n\t\tlet img = <img src={imgSrc} alt=\"pic\" className={styles.authors} />;\n\t\tlet p = <p className={styles.text}\n\t\t\t\tonMouseOver={(event) => event.target.innerHTML = item.node.eng}\n\t\t\tonMouseLeave={(event) => event.target.innerHTML = item.node.rus}>\n\t\t\t\t{item.node.rus}\n\t\t\t</p>;\n\t\tif (i % 2 === 0) {\n\t\t\tcol1.push(p);\n\t\t    col2.push(img);\n\t\t} else {\n\t\t\tcol1.push(img);\n\t\t\tcol2.push(p);\n\t\t}\n\t\ti++;\n\t});\t\n\tcol1 = col1.map((r) => <div>{r}</div>);\n\tcol2 = col2.map((i) => <div>{i}</div>);\n\treturn\t<div className={styles.row}>\n\t\t\t\t<div className={styles.column}>\n\t\t\t\t\t{col1}\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.column}>\n\t\t\t\t\t{col2}\t\n\t\t\t\t</div>\n\t\t\t</div>;\n}\n"],"sourceRoot":""}