{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./src/pages/flashcards/Deck.js","webpack:///./src/components/flashcards-container.module.css","webpack:///./src/pages/flashcards/Card.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["module","exports","Deck","props","cards","name","me","func","changeDeck","window","scrollTo","render","className","styles","deck","onClick","this","src","alt","cardPic","deckName","Component","data","require","Card","i","length","push","state","decks","goTo","cardDiv","posDiv","isRus","flipped","sorted","all","update","bind","flip","next","switchLang","deckify","goToPos","flipdate","innerHTML","rus","eng","amt","links","key","setState","index","parseInt","value","componentDidMount","document","getElementById","type","pos","id","cardText","defaultValue","min","max","to","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","StaticQuery","children","Consumer","m","default","$export","defined","fails","spaces","space","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","trim","P","F","string","TYPE","String","replace","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","global","has","cof","inheritIfRequired","toPrimitive","gOPN","f","gOPD","dP","$trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","l","arguments","that","valueOf","call","keys","split","j","constructor"],"mappings":"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","file":"component---src-pages-flashcards-card-js-577fa3bb76f94f3fb82e.js","sourcesContent":["module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","import React, { Component } from \"react\"\nimport styles from \"../../components/flashcards-container.module.css\"\n\n//all the buttons that show up when you\n//hit the sort button\n//each deck will have 10 words in it just because \n//I think that's a pretty manageable amount of words\n//to learn at once\nclass Deck extends Component {\n    constructor(props) {\n        super(props); \n        //each deck component has a reference to\n        //the card component so it can tell the \n        //card comp. to change to its cards\n        this.cards = props.cards;\n        this.name = props.name;\n        var me = this;\n        //when this deck button is clicked,\n        //change cards to cards of this deck\n        this.func = function() {\n            props.cards.changeDeck(me.name);\n            window.scrollTo(0,0);\n        };\n    }\n\n    //each has a deck pic and the number\n    render() {\n        return (\n            <div className={styles.deck} onClick={this.func}>\n                <img src=\"../cards.png\" alt=\"deck\" className={styles.cardPic}/>\n                <div className={styles.deckName}>{this.name}</div>\n            </div>\n        )\n    }\n}\n\nexport default Deck; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flashbod\":\"flashcards-container-module--flashbod--1dKZ0\",\"cardPic\":\"flashcards-container-module--cardPic--39BXB\",\"deckName\":\"flashcards-container-module--deckName--10SnQ\",\"flip\":\"flashcards-container-module--flip--1xKou\",\"pos\":\"flashcards-container-module--pos--HL0P-\",\"cardText\":\"flashcards-container-module--cardText--9lfJY\",\"save\":\"flashcards-container-module--save--1uRfQ\",\"deck\":\"flashcards-container-module--deck--2tI7J\"};","import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\nimport Deck from './Deck'\nimport styles from \"../../components/flashcards-container.module.css\"\n\nlet data = require('../../data/Cards.json')\n\n//The big white square with the words in it\nclass Card extends Component {\n    //give properties to react component constructor\n    constructor(props) {\n        super(props);\n        this.cards = [];\n        let i;\n        for (i=0; i < data.length; i++) {\n            this.cards.push(data[i]);\n        }\n        \n        //card text and position number text\n        //goes in div\n        this.state = {\n            decks: []\n        };\n        this.goTo = null;\n        this.cardDiv = null;\n        this.posDiv = null\n        //array of all possible cards\n        //current card index\n        this.i = 0;\n        //are we on the russian side? \n        //either bc rus side up or bc flipped\n        this.isRus = true;\n        //card was flipped\n        this.flipped = false;\n        \n        //don't sort more than once\n        this.sorted = false;\n        //storage for cards if decks\n        this.all = [];\n\n        this.update = this.update.bind(this);\n        this.flip = this.flip.bind(this);\n        this.next = this.next.bind(this);\n        this.switchLang = this.switchLang.bind(this);\n        this.deckify = this.deckify.bind(this);\n        this.goToPos = this.goToPos.bind(this);\n        this.flipdate = this.flipdate.bind(this)\n    }\n\n    //pick the rus or eng side of the card at \n    //current index and update the text\n    update() {\n        if (this.cardDiv !== null) {\n            this.cardDiv.innerHTML = this.isRus ? this.cards[this.i].rus : this.cards[this.i].eng;\n            this.posDiv.innerHTML = (this.i + 1) + \"/\" + this.cards.length;\n        }\n    }\n\n    //swap sides and update\n    flip() {\n        this.isRus = !this.isRus;\n        this.flipped = !this.flipped;\n        this.update();\n    }\n\n    //move the card index forward or back \n    next(amt) {\n        this.i = (this.i + amt) % this.cards.length;\n        //wrap around\n        if (this.i < 0) {\n            this.i = this.cards.length - 1;\n        }\n        //if you flipped over the card last time,\n        //this one shouldn't be flipped too\n        this.flipdate();\n        \n    }\n\n\n    //flip sides before updating or no\n    //for when deck or language changes\n    flipdate() {\n        if (this.flipped) {\n            this.flip()\n        } else {\n            this.update();\n        }\n    }\n\n    //take all the cars and split them into decks \n    //with 10 cards each\n    deckify() {\n        var i;\n        //save all the cards so they can be grabbed when \n        //deck changes\n        for (i = 0; i < this.cards.length; i++) {\n            this.all.push(this.cards[i]);\n        }\n        //fill array with deck components\n        var links = [];\n        for (i = 10; i < this.all.length; i+=10) {\n            links.push(<Deck name={i} key={i} cards={this}/>);\n        }\n        //go back to first deck\n        this.changeDeck(10);\n        this.setState({decks : links})\n    }\n\n    //change the card to be 10 cards from index - 10\n    //to index\n    changeDeck(index) {\n        //empty current cards\n        this.cards = [];\n        var i;\n        for (i = index - 10; i < index; i++) {\n            this.cards.push(this.all[i]);\n        }\n        this.i = 0;\n        this.flipdate();\n    }\n\n    //change all cards to be other language side up\n    switchLang() {\n        this.rus = !this.rus;\n        this.update();\n    }\n\n    goToPos() {\n        this.i = parseInt(this.goTo.value) - 1;\n        this.update();\n    }\n\n    //if this react component was made successfully\n    //then add click handlers to the card div and buttons\n    componentDidMount() {\n       this.cardDiv = document.getElementById(\"cardDiv\");\n       this.posDiv = document.getElementById(\"posText\");\n       this.decks = document.getElementById(\"decks\");\n       this.goTo = document.getElementById(\"goInput\");\n       this.update();\n    }\n\n    //this is what card and buttons should look like\n    //StaticQuery is the query to get the json info\n    render() {\n        return (\n            <div>\n                <center>\n                    <button type=\"button\" className={styles.flip} onClick={this.switchLang}>рус - анг</button>\n                    <br/>\n                    <button type=\"button\" onClick={() => this.next(-1)}>прошлая</button>\n                    <p className={styles.pos} id=\"posText\"></p>\n                    <button type=\"button\" onClick={() => this.next(1)}>следующая</button>\n                    <div className={styles.cardText} id=\"cardDiv\" onClick={this.flip}>\n                    </div>\n                    <div>\n                        <input type=\"number\" id=\"goInput\" defaultValue=\"1\" min=\"1\" max={this.cards.length}/>\n                        <button type=\"button\" onClick={this.goToPos}>давай!</button>\n                        <button type=\"button\" onClick={this.deckify}>сортировать</button>\n                        <Link to=\"/game/\">\n                            <button type=\"button\">\n                                игра\n                            </button>\n                        </Link>\n                        <br/>\n                    <div id=\"decks\">\n                        {this.state.decks}\n                    </div>\n                    </div>\n                </center>\n            </div>\n        )\n    }\n\n    // render() {\n    //     return this.state.content;\n    // }\n}\n\nexport default Card;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}